import{_ as p,C as r,c as d,o as h,aA as l,j as i,G as a,a as t,w as n}from"./chunks/framework.Bzd2nSyN.js";const x=JSON.parse('{"title":"TradingPipeline","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":null}'),o={name:"index.md"},k={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""};function P(C,s,F,j,v,S){const e=r("Badge");return h(),d("div",null,[s[50]||(s[50]=l(`<h1 id="TradingPipeline" tabindex="-1">TradingPipeline <a class="header-anchor" href="#TradingPipeline" aria-label="Permalink to &quot;TradingPipeline {#TradingPipeline}&quot;">​</a></h1><ul><li><p>Hello, how are you?</p></li><li><p>DocumenterVitepress.jl generates very good-looking output.</p></li></ul><h2 id="Live-Reloading-SAGA" tabindex="-1">Live Reloading SAGA <a class="header-anchor" href="#Live-Reloading-SAGA" aria-label="Permalink to &quot;Live Reloading SAGA {#Live-Reloading-SAGA}&quot;">​</a></h2><ul><li>Live-reloading doesn&#39;t work as documented. <ul><li><p>It&#39;s almost there, but not quite.</p></li><li><p>It can&#39;t serve the js and css assets.</p></li><li><p>However, it does live reload the HTML parts.</p></li></ul></li></ul><h2 id="Holy-fucking-shit." tabindex="-1">Holy fucking shit. <a class="header-anchor" href="#Holy-fucking-shit." aria-label="Permalink to &quot;Holy fucking shit. {#Holy-fucking-shit.}&quot;">​</a></h2><ul><li>It is so hacky, but I made it work. <ul><li><p>servedocs() starts a LiveSerever</p></li><li><p>then I run another LiveServer, but the two servers share state, and the config I give the second one overrides the first LiveServer.</p></li><li><p>Finally, I added a userscript to hack the websocket listener to make it wait a few seconds before reloading the page.</p></li></ul></li></ul><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;makedev.jl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># This runs a LiveSerever.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sd_pid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Threads</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@spawn</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> servedocs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(foldername</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># This runs another LiveServer, but it also overrides the \`dir\` for the first one.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># The LiveServer is effectively a singleton.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ls_pid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Threads</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@spawn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LiveServer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">serve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./build/1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>And then the UserScript to top it all off.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ==UserScript==</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @name        New script localhost</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @namespace   Violentmonkey Scripts</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @match       http://localhost:8000/*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @grant       unsafeWindow</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @version     1.0</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @author      -</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @description 8/4/2025, 6:26:18 PM</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ==/UserScript==</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">unsafeWindow.ws_liveserver_M3sp9.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onmessage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">msg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (msg.data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;update&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;update received&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ws_liveserver_M3sp9.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;after wait&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); location.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;websocket delay hack added.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Documentation for <a href="https://github.com/g-gundam/TradingPipeline.jl" target="_blank" rel="noreferrer">TradingPipeline</a>.</p><ul><li><a href="#TradingPipeline.simulate_sanity_check_failure_error"><code>TradingPipeline.simulate_sanity_check_failure_error</code></a></li><li><a href="#TradingPipeline.AbstractExchangeResponse"><code>TradingPipeline.AbstractExchangeResponse</code></a></li><li><a href="#TradingPipeline.AbstractManualCommand"><code>TradingPipeline.AbstractManualCommand</code></a></li><li><a href="#TechnicalIndicatorCharts.visualize-Tuple{Tuple{TechnicalIndicatorCharts.Chart, ExchangeOperations.AbstractSession}}"><code>TechnicalIndicatorCharts.visualize</code></a></li><li><a href="#TradingPipeline.PNL.pnl-Tuple{TradingPipeline.PNL.Short}"><code>TradingPipeline.PNL.pnl</code></a></li><li><a href="#TradingPipeline.PNL.pnl-Tuple{TradingPipeline.PNL.Long}"><code>TradingPipeline.PNL.pnl</code></a></li><li><a href="#TradingPipeline.PNL.qty-Tuple{Contracts, Number}"><code>TradingPipeline.PNL.qty</code></a></li><li><a href="#TradingPipeline.PNL.qty-Tuple{Number, Number}"><code>TradingPipeline.PNL.qty</code></a></li><li><a href="#TradingPipeline.Stops.set_subject!-Tuple{Rocket.AbstractSubject}"><code>TradingPipeline.Stops.set_subject!</code></a></li><li><a href="#TradingPipeline.around-Tuple{Dates.DateTime, DataFrames.AbstractDataFrame}"><code>TradingPipeline.around</code></a></li><li><a href="#TradingPipeline.decide-Tuple{TradingPipeline.AbstractStrategy, TradingPipeline.MOS.Neutral}"><code>TradingPipeline.decide</code></a></li><li><a href="#TradingPipeline.load_strategy-Tuple{Type{TradingPipeline.GoldenCrossStrategy}}"><code>TradingPipeline.load_strategy</code></a></li><li><a href="#TradingPipeline.load_strategy-Tuple{Type{TradingPipeline.HMAStrategy}}"><code>TradingPipeline.load_strategy</code></a></li><li><a href="#TradingPipeline.percent_diff-Tuple{Any, Any}"><code>TradingPipeline.percent_diff</code></a></li><li><a href="#TradingPipeline.report-Tuple{ExchangeOperations.SimulatorSession}"><code>TradingPipeline.report</code></a></li><li><a href="#TradingPipeline.simulate-Tuple{Any, Type{&lt;:TradingPipeline.AbstractStrategy}}"><code>TradingPipeline.simulate</code></a></li><li><a href="#TradingPipeline.PNL.@pnl-NTuple{4, Any}"><code>TradingPipeline.PNL.@pnl</code></a></li><li><a href="#TradingPipeline.PNL.@pnls-NTuple{4, Any}"><code>TradingPipeline.PNL.@pnls</code></a></li></ul>`,11)),i("details",k,[i("summary",null,[s[0]||(s[0]=i("a",{id:"TradingPipeline.simulate_sanity_check_failure_error",href:"#TradingPipeline.simulate_sanity_check_failure_error"},[i("span",{class:"jlbinding"},"TradingPipeline.simulate_sanity_check_failure_error")],-1)),s[1]||(s[1]=t()),a(e,{type:"info",class:"jlObjectType jlConstant",text:"Constant"})]),s[3]||(s[3]=i("p",null,[i("code",null,"simulate_sanity_check_failure_error"),t(" is a tuple filled with a lot of nothing values so that code that's @unpack'ing return values from "),i("code",null,"simulate()"),t(" don't crash.")],-1)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[2]||(s[2]=[i("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/7785c1d35092b58b175da7c4dec34ea8c9f855d5/src/pipeline.jl#L19-L21",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[2]})]),i("details",g,[i("summary",null,[s[4]||(s[4]=i("a",{id:"TradingPipeline.AbstractExchangeResponse",href:"#TradingPipeline.AbstractExchangeResponse"},[i("span",{class:"jlbinding"},"TradingPipeline.AbstractExchangeResponse")],-1)),s[5]||(s[5]=t()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[7]||(s[7]=l('<p>An <strong>AbstractExchangeResponse</strong> represents a message that was received from an ExchangeFillSubject. The most common is <strong>ExchangeFill</strong> which lets the StrategySubject know that after putting out an intent to open or close a position, the exchange has filled the order and the requested position change has occurred.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> subtypes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TradingPipeline</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractExchangeResponse)</span></span></code></pre></div>',3)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[6]||(s[6]=[i("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/7785c1d35092b58b175da7c4dec34ea8c9f855d5/src/rocket.jl#L47-L58",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[6]})]),i("details",c,[i("summary",null,[s[8]||(s[8]=i("a",{id:"TradingPipeline.AbstractManualCommand",href:"#TradingPipeline.AbstractManualCommand"},[i("span",{class:"jlbinding"},"TradingPipeline.AbstractManualCommand")],-1)),s[9]||(s[9]=t()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[11]||(s[11]=l('<p>An <strong>AbstractManualCommand</strong> represents a manual intervention from a human to the StrategySubject.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> subtypes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TradingPipeline</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractExchangeResponse)</span></span></code></pre></div>',3)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[10]||(s[10]=[i("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/7785c1d35092b58b175da7c4dec34ea8c9f855d5/src/rocket.jl#L66-L74",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[10]})]),i("details",u,[i("summary",null,[s[12]||(s[12]=i("a",{id:"TechnicalIndicatorCharts.visualize-Tuple{Tuple{TechnicalIndicatorCharts.Chart, ExchangeOperations.AbstractSession}}",href:"#TechnicalIndicatorCharts.visualize-Tuple{Tuple{TechnicalIndicatorCharts.Chart, ExchangeOperations.AbstractSession}}"},[i("span",{class:"jlbinding"},"TechnicalIndicatorCharts.visualize")],-1)),s[13]||(s[13]=t()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[15]||(s[15]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">visualize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple{TechnicalIndicatorCharts.Chart, ExchangeOperations.AbstractSession}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LightweightCharts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LWCLayout</span></span></code></pre></div><p>Let&#39;s see if I can visualize trades on top of a chart.</p>`,2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[14]||(s[14]=[i("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/7785c1d35092b58b175da7c4dec34ea8c9f855d5/src/report.jl#L65",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[14]})]),i("details",E,[i("summary",null,[s[16]||(s[16]=i("a",{id:"TradingPipeline.around-Tuple{Dates.DateTime, DataFrames.AbstractDataFrame}",href:"#TradingPipeline.around-Tuple{Dates.DateTime, DataFrames.AbstractDataFrame}"},[i("span",{class:"jlbinding"},"TradingPipeline.around")],-1)),s[17]||(s[17]=t()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[19]||(s[19]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">around</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dates.DateTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    df</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DataFrames.AbstractDataFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    before,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    after,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ts_field</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Return a few rows before and after the given timestamp <code>ts</code> in the DataFrame <code>df</code>.</p>`,2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[18]||(s[18]=[i("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/7785c1d35092b58b175da7c4dec34ea8c9f855d5/src/explore.jl#L9",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[18]})]),i("details",y,[i("summary",null,[s[20]||(s[20]=i("a",{id:"TradingPipeline.decide-Tuple{TradingPipeline.AbstractStrategy, TradingPipeline.MOS.Neutral}",href:"#TradingPipeline.decide-Tuple{TradingPipeline.AbstractStrategy, TradingPipeline.MOS.Neutral}"},[i("span",{class:"jlbinding"},"TradingPipeline.decide")],-1)),s[21]||(s[21]=t()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[23]||(s[23]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">decide</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(strategy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractStrategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, state</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HSM.AbstractHsmState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Union{Nothing, TradeDecision</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">T}</span></span></code></pre></div><p>The decide method takes the current strategy and the current state according to the state machine, and looks at the market data available to it to make a decision. Often, it decides to return <code>nothing</code>, but if conditions as defined by the strategy are met, it could return an <code>HSM.AbstractHsmEvent</code> which will cause the state machine to move to the next appropriate state.</p><p>There are decide methods for every state in the state machine.</p>`,3)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[22]||(s[22]=[i("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/7785c1d35092b58b175da7c4dec34ea8c9f855d5/src/rocket.jl#L151-L163",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[22]})]),i("details",b,[i("summary",null,[s[24]||(s[24]=i("a",{id:"TradingPipeline.load_strategy-Tuple{Type{TradingPipeline.GoldenCrossStrategy}}",href:"#TradingPipeline.load_strategy-Tuple{Type{TradingPipeline.GoldenCrossStrategy}}"},[i("span",{class:"jlbinding"},"TradingPipeline.load_strategy")],-1)),s[25]||(s[25]=t()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[27]||(s[27]=i("p",null,"Initialize a long-only simple golden cross strategy.",-1)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[26]||(s[26]=[i("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/7785c1d35092b58b175da7c4dec34ea8c9f855d5/src/strategies/goldencross.jl#L26-L28",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[26]})]),i("details",T,[i("summary",null,[s[28]||(s[28]=i("a",{id:"TradingPipeline.load_strategy-Tuple{Type{TradingPipeline.HMAStrategy}}",href:"#TradingPipeline.load_strategy-Tuple{Type{TradingPipeline.HMAStrategy}}"},[i("span",{class:"jlbinding"},"TradingPipeline.load_strategy")],-1)),s[29]||(s[29]=t()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[31]||(s[31]=i("p",null,"Initialize a long-only hma strategy.",-1)),s[32]||(s[32]=i("ul",null,[i("li",null,"Looking for 330/440 crosses")],-1)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[30]||(s[30]=[i("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/7785c1d35092b58b175da7c4dec34ea8c9f855d5/src/strategies/hma.jl#L20-L24",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[30]})]),i("details",m,[i("summary",null,[s[33]||(s[33]=i("a",{id:"TradingPipeline.percent_diff-Tuple{Any, Any}",href:"#TradingPipeline.percent_diff-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"TradingPipeline.percent_diff")],-1)),s[34]||(s[34]=t()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[36]||(s[36]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">percent_diff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, b) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Return the percent difference between <code>a</code> and <code>b</code>.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[35]||(s[35]=[i("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/7785c1d35092b58b175da7c4dec34ea8c9f855d5/src/util.jl#L3-L7",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[35]})]),i("details",f,[i("summary",null,[s[37]||(s[37]=i("a",{id:"TradingPipeline.report-Tuple{ExchangeOperations.SimulatorSession}",href:"#TradingPipeline.report-Tuple{ExchangeOperations.SimulatorSession}"},[i("span",{class:"jlbinding"},"TradingPipeline.report")],-1)),s[38]||(s[38]=t()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[40]||(s[40]=i("p",null,"report(session::XO.SimulatorSession) -> DataFrame",-1)),s[41]||(s[41]=i("p",null,"Return a list of trades that happened during the simulator session.",-1)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[39]||(s[39]=[i("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/7785c1d35092b58b175da7c4dec34ea8c9f855d5/src/report.jl#L33-L37",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[39]})]),i("details",_,[i("summary",null,[s[42]||(s[42]=i("a",{id:"TradingPipeline.simulate-Tuple{Any, Type{<:TradingPipeline.AbstractStrategy}}",href:"#TradingPipeline.simulate-Tuple{Any, Type{<:TradingPipeline.AbstractStrategy}}"},[i("span",{class:"jlbinding"},"TradingPipeline.simulate")],-1)),s[43]||(s[43]=t()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[45]||(s[45]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">simulate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    candle_observable,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    strategy_type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{&lt;:TradingPipeline.AbstractStrategy}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Run a strategy on the simulator using the given <code>candle_observable</code>.</p><p><strong>Return Values</strong></p><p>A named tuple with the following keys will be returned: <code>simulator_session</code>, <code>hsm</code>, <code>simultator_exchange_driver_subject</code>, <code>fill_observable</code>, <code>chart_subject</code>, <code>strategy_subject</code>, <code>simulator_session_actor</code>.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> candle_observable </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> df_candles_observable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(btcusd1m)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IterableObservable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Candle, Vector{Candle}, Rocket</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AsapScheduler)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @unpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> simulator_session, chart_subject </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> simulate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(candle_observable, HMAStrategy);</span></span></code></pre></div>`,6)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[44]||(s[44]=[i("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/7785c1d35092b58b175da7c4dec34ea8c9f855d5/src/pipeline.jl#L40",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[44]})]),i("details",A,[i("summary",null,[s[46]||(s[46]=i("a",{id:"TradingPipeline.Stops.set_subject!-Tuple{Rocket.AbstractSubject}",href:"#TradingPipeline.Stops.set_subject!-Tuple{Rocket.AbstractSubject}"},[i("span",{class:"jlbinding"},"TradingPipeline.Stops.set_subject!")],-1)),s[47]||(s[47]=t()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[49]||(s[49]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_subject!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(subject</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Rocket.AbstractSubject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Mutate the subject of all TP.Stops state instances. This is my workaround for state machines being singletons.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[48]||(s[48]=[i("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/7785c1d35092b58b175da7c4dec34ea8c9f855d5/src/stops.jl#L45-L50",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[48]})])])}const L=p(o,[["render",P]]);export{x as __pageData,L as default};

import{_ as r,C as p,c as d,o,aA as l,j as e,G as a,a as t,w as n}from"./chunks/framework.BbH66tGk.js";const R=JSON.parse('{"title":"TradingPipeline","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":null}'),h={name:"index.md"},g={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""};function D(M,i,I,L,N,V){const s=p("Badge");return o(),d("div",null,[i[78]||(i[78]=l('<h1 id="tradingpipeline" tabindex="-1">TradingPipeline <a class="header-anchor" href="#tradingpipeline" aria-label="Permalink to &quot;TradingPipeline&quot;">â€‹</a></h1><ul><li><p>Hello, how are you?</p></li><li><p>DocumenterVitepress.jl generates very good-looking output.</p></li></ul><p>Documentation for <a href="https://github.com/g-gundam/TradingPipeline.jl" target="_blank" rel="noreferrer">TradingPipeline</a>.</p><ul><li><a href="#TradingPipeline.simulate_sanity_check_failure_error"><code>TradingPipeline.simulate_sanity_check_failure_error</code></a></li><li><a href="#TradingPipeline.AbstractExchangeResponse"><code>TradingPipeline.AbstractExchangeResponse</code></a></li><li><a href="#TradingPipeline.AbstractManualCommand"><code>TradingPipeline.AbstractManualCommand</code></a></li><li><a href="#TechnicalIndicatorCharts.visualize-Tuple{Tuple{TechnicalIndicatorCharts.Chart, ExchangeOperations.AbstractSession}}"><code>TechnicalIndicatorCharts.visualize</code></a></li><li><a href="#TradingPipeline.Stops.set_subject!-Tuple{Rocket.AbstractSubject}"><code>TradingPipeline.Stops.set_subject!</code></a></li><li><a href="#TradingPipeline.around-Tuple{Dates.DateTime, DataFrames.AbstractDataFrame}"><code>TradingPipeline.around</code></a></li><li><a href="#TradingPipeline.decide-Tuple{TradingPipeline.AbstractStrategy, TradingPipeline.Neutral}"><code>TradingPipeline.decide</code></a></li><li><a href="#TradingPipeline.load_strategy-Tuple{Type{TradingPipeline.HMAStrategy}}"><code>TradingPipeline.load_strategy</code></a></li><li><a href="#TradingPipeline.load_strategy-Tuple{Type{TradingPipeline.GoldenCrossStrategy}}"><code>TradingPipeline.load_strategy</code></a></li><li><a href="#TradingPipeline.percent_diff-Tuple{Any, Any}"><code>TradingPipeline.percent_diff</code></a></li><li><a href="#TradingPipeline.pnl-Tuple{Long}"><code>TradingPipeline.pnl</code></a></li><li><a href="#TradingPipeline.pnl-Tuple{Short}"><code>TradingPipeline.pnl</code></a></li><li><a href="#TradingPipeline.qty-Tuple{Number, Number}"><code>TradingPipeline.qty</code></a></li><li><a href="#TradingPipeline.qty-Tuple{Contracts, Number}"><code>TradingPipeline.qty</code></a></li><li><a href="#TradingPipeline.report-Tuple{ExchangeOperations.SimulatorSession}"><code>TradingPipeline.report</code></a></li><li><a href="#TradingPipeline.simulate-Tuple{Any, Type{&lt;:TradingPipeline.AbstractStrategy}}"><code>TradingPipeline.simulate</code></a></li><li><a href="#TradingPipeline.@hsm-Tuple{Any}"><code>TradingPipeline.@hsm</code></a></li><li><a href="#TradingPipeline.@pnl-NTuple{4, Any}"><code>TradingPipeline.@pnl</code></a></li><li><a href="#TradingPipeline.@pnls-NTuple{4, Any}"><code>TradingPipeline.@pnls</code></a></li></ul>',4)),e("details",g,[e("summary",null,[i[0]||(i[0]=e("a",{id:"TradingPipeline.simulate_sanity_check_failure_error",href:"#TradingPipeline.simulate_sanity_check_failure_error"},[e("span",{class:"jlbinding"},"TradingPipeline.simulate_sanity_check_failure_error")],-1)),i[1]||(i[1]=t()),a(s,{type:"info",class:"jlObjectType jlConstant",text:"Constant"})]),i[3]||(i[3]=e("p",null,[e("code",null,"simulate_sanity_check_failure_error"),t(" is a tuple filled with a lot of nothing values so that code that's @unpack'ing return values from "),e("code",null,"simulate()"),t(" don't crash.")],-1)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[2]||(i[2]=[e("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/5cbe750d31f5a154e1d6dee9b607a2a0536cec34/src/pipeline.jl#L16-L18",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",k,[e("summary",null,[i[4]||(i[4]=e("a",{id:"TradingPipeline.AbstractExchangeResponse",href:"#TradingPipeline.AbstractExchangeResponse"},[e("span",{class:"jlbinding"},"TradingPipeline.AbstractExchangeResponse")],-1)),i[5]||(i[5]=t()),a(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[7]||(i[7]=l('<p>An <strong>AbstractExchangeResponse</strong> represents a message that was received from an ExchangeFillSubject. The most common is <strong>ExchangeFill</strong> which lets the StrategySubject know that after putting out an intent to open or close a position, the exchange has filled the order and the requested position change has occurred.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> subtypes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TradingPipeline</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractExchangeResponse)</span></span></code></pre></div>',3)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[6]||(i[6]=[e("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/5cbe750d31f5a154e1d6dee9b607a2a0536cec34/src/rocket.jl#L44-L55",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",u,[e("summary",null,[i[8]||(i[8]=e("a",{id:"TradingPipeline.AbstractManualCommand",href:"#TradingPipeline.AbstractManualCommand"},[e("span",{class:"jlbinding"},"TradingPipeline.AbstractManualCommand")],-1)),i[9]||(i[9]=t()),a(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[11]||(i[11]=l('<p>An <strong>AbstractManualCommand</strong> represents a manual intervention from a human to the StrategySubject.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> subtypes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TradingPipeline</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractExchangeResponse)</span></span></code></pre></div>',3)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[10]||(i[10]=[e("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/5cbe750d31f5a154e1d6dee9b607a2a0536cec34/src/rocket.jl#L63-L71",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",c,[e("summary",null,[i[12]||(i[12]=e("a",{id:"TechnicalIndicatorCharts.visualize-Tuple{Tuple{TechnicalIndicatorCharts.Chart, ExchangeOperations.AbstractSession}}",href:"#TechnicalIndicatorCharts.visualize-Tuple{Tuple{TechnicalIndicatorCharts.Chart, ExchangeOperations.AbstractSession}}"},[e("span",{class:"jlbinding"},"TechnicalIndicatorCharts.visualize")],-1)),i[13]||(i[13]=t()),a(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[15]||(i[15]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">visualize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple{TechnicalIndicatorCharts.Chart, ExchangeOperations.AbstractSession}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LightweightCharts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LWCLayout</span></span></code></pre></div><p>Let&#39;s see if I can visualize trades on top of a chart.</p>`,2)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[14]||(i[14]=[e("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/5cbe750d31f5a154e1d6dee9b607a2a0536cec34/src/report.jl#L65",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",b,[e("summary",null,[i[16]||(i[16]=e("a",{id:"TradingPipeline.around-Tuple{Dates.DateTime, DataFrames.AbstractDataFrame}",href:"#TradingPipeline.around-Tuple{Dates.DateTime, DataFrames.AbstractDataFrame}"},[e("span",{class:"jlbinding"},"TradingPipeline.around")],-1)),i[17]||(i[17]=t()),a(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[19]||(i[19]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">around</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dates.DateTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    df</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DataFrames.AbstractDataFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    before,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    after,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ts_field</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Return a few rows before and after the given timestamp <code>ts</code> in the DataFrame <code>df</code>.</p>`,2)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[18]||(i[18]=[e("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/5cbe750d31f5a154e1d6dee9b607a2a0536cec34/src/explore.jl#L9",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",y,[e("summary",null,[i[20]||(i[20]=e("a",{id:"TradingPipeline.decide-Tuple{TradingPipeline.AbstractStrategy, TradingPipeline.Neutral}",href:"#TradingPipeline.decide-Tuple{TradingPipeline.AbstractStrategy, TradingPipeline.Neutral}"},[e("span",{class:"jlbinding"},"TradingPipeline.decide")],-1)),i[21]||(i[21]=t()),a(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[23]||(i[23]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">decide</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(strategy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractStrategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, state</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HSM.AbstractHsmState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Union{Nothing, TradeDecision</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">T}</span></span></code></pre></div><p>The decide method takes the current strategy and the current state according to the state machine, and looks at the market data available to it to make a decision. Often, it decides to return <code>nothing</code>, but if conditions as defined by the strategy are met, it could return an <code>HSM.AbstractHsmEvent</code> which will cause the state machine to move to the next appropriate state.</p><p>There are decide methods for every state in the state machine.</p>`,3)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[22]||(i[22]=[e("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/5cbe750d31f5a154e1d6dee9b607a2a0536cec34/src/rocket.jl#L148-L160",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",T,[e("summary",null,[i[24]||(i[24]=e("a",{id:"TradingPipeline.load_strategy-Tuple{Type{TradingPipeline.GoldenCrossStrategy}}",href:"#TradingPipeline.load_strategy-Tuple{Type{TradingPipeline.GoldenCrossStrategy}}"},[e("span",{class:"jlbinding"},"TradingPipeline.load_strategy")],-1)),i[25]||(i[25]=t()),a(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[27]||(i[27]=e("p",null,"Initialize a long-only simple golden cross strategy.",-1)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[26]||(i[26]=[e("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/5cbe750d31f5a154e1d6dee9b607a2a0536cec34/src/strategies/goldencross.jl#L26-L28",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",E,[e("summary",null,[i[28]||(i[28]=e("a",{id:"TradingPipeline.load_strategy-Tuple{Type{TradingPipeline.HMAStrategy}}",href:"#TradingPipeline.load_strategy-Tuple{Type{TradingPipeline.HMAStrategy}}"},[e("span",{class:"jlbinding"},"TradingPipeline.load_strategy")],-1)),i[29]||(i[29]=t()),a(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[31]||(i[31]=e("p",null,"Initialize a long-only hma strategy.",-1)),i[32]||(i[32]=e("ul",null,[e("li",null,"Looking for 330/440 crosses")],-1)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[30]||(i[30]=[e("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/5cbe750d31f5a154e1d6dee9b607a2a0536cec34/src/strategies/hma.jl#L20-L24",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",m,[e("summary",null,[i[33]||(i[33]=e("a",{id:"TradingPipeline.percent_diff-Tuple{Any, Any}",href:"#TradingPipeline.percent_diff-Tuple{Any, Any}"},[e("span",{class:"jlbinding"},"TradingPipeline.percent_diff")],-1)),i[34]||(i[34]=t()),a(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[36]||(i[36]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">percent_diff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, b) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Return the percent difference between <code>a</code> and <code>b</code>.</p>',2)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[35]||(i[35]=[e("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/5cbe750d31f5a154e1d6dee9b607a2a0536cec34/src/util.jl#L3-L7",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",f,[e("summary",null,[i[37]||(i[37]=e("a",{id:"TradingPipeline.pnl-Tuple{Long}",href:"#TradingPipeline.pnl-Tuple{Long}"},[e("span",{class:"jlbinding"},"TradingPipeline.pnl")],-1)),i[38]||(i[38]=t()),a(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[40]||(i[40]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pnl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(long</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Long</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TradingPipeline</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Result</span></span></code></pre></div><p>Calculate profit/loss of a long position.</p>',2)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[39]||(i[39]=[e("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/5cbe750d31f5a154e1d6dee9b607a2a0536cec34/src/pnl.jl#L56",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",j,[e("summary",null,[i[41]||(i[41]=e("a",{id:"TradingPipeline.pnl-Tuple{Short}",href:"#TradingPipeline.pnl-Tuple{Short}"},[e("span",{class:"jlbinding"},"TradingPipeline.pnl")],-1)),i[42]||(i[42]=t()),a(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[44]||(i[44]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pnl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(short</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Short</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TradingPipeline</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Result</span></span></code></pre></div><p>Calculate profit/loss of a short position.</p>',2)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[43]||(i[43]=[e("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/5cbe750d31f5a154e1d6dee9b607a2a0536cec34/src/pnl.jl#L72",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",_,[e("summary",null,[i[45]||(i[45]=e("a",{id:"TradingPipeline.qty-Tuple{Contracts, Number}",href:"#TradingPipeline.qty-Tuple{Contracts, Number}"},[e("span",{class:"jlbinding"},"TradingPipeline.qty")],-1)),i[46]||(i[46]=t()),a(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[48]||(i[48]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">qty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Contracts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, price</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Convert contracts into the equivalent quantity of the asset being traded.</p>',2)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[47]||(i[47]=[e("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/5cbe750d31f5a154e1d6dee9b607a2a0536cec34/src/pnl.jl#L48-L52",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",P,[e("summary",null,[i[49]||(i[49]=e("a",{id:"TradingPipeline.qty-Tuple{Number, Number}",href:"#TradingPipeline.qty-Tuple{Number, Number}"},[e("span",{class:"jlbinding"},"TradingPipeline.qty")],-1)),i[50]||(i[50]=t()),a(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[52]||(i[52]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">qty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, price</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>This just returns n since the quantity <code>n</code>.</p>',2)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[51]||(i[51]=[e("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/5cbe750d31f5a154e1d6dee9b607a2a0536cec34/src/pnl.jl#L40-L44",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",C,[e("summary",null,[i[53]||(i[53]=e("a",{id:"TradingPipeline.report-Tuple{ExchangeOperations.SimulatorSession}",href:"#TradingPipeline.report-Tuple{ExchangeOperations.SimulatorSession}"},[e("span",{class:"jlbinding"},"TradingPipeline.report")],-1)),i[54]||(i[54]=t()),a(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[56]||(i[56]=e("p",null,"report(session::XO.SimulatorSession) -> DataFrame",-1)),i[57]||(i[57]=e("p",null,"Return a list of trades that happened during the simulator session.",-1)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[55]||(i[55]=[e("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/5cbe750d31f5a154e1d6dee9b607a2a0536cec34/src/report.jl#L33-L37",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",A,[e("summary",null,[i[58]||(i[58]=e("a",{id:"TradingPipeline.simulate-Tuple{Any, Type{<:TradingPipeline.AbstractStrategy}}",href:"#TradingPipeline.simulate-Tuple{Any, Type{<:TradingPipeline.AbstractStrategy}}"},[e("span",{class:"jlbinding"},"TradingPipeline.simulate")],-1)),i[59]||(i[59]=t()),a(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[61]||(i[61]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">simulate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    candle_observable,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    strategy_type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{&lt;:TradingPipeline.AbstractStrategy}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Run a strategy on the simulator using the given <code>candle_observable</code>.</p><p><strong>Return Values</strong></p><p>A named tuple with the following keys will be returned: <code>simulator_session</code>, <code>hsm</code>, <code>simultator_exchange_driver_subject</code>, <code>fill_observable</code>, <code>chart_subject</code>, <code>strategy_subject</code>, <code>simulator_session_actor</code>.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> candle_observable </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> df_candles_observable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(btcusd1m)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IterableObservable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Candle, Vector{Candle}, Rocket</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AsapScheduler)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @unpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> simulator_session, chart_subject </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> simulate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(candle_observable, HMAStrategy);</span></span></code></pre></div>`,6)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[60]||(i[60]=[e("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/5cbe750d31f5a154e1d6dee9b607a2a0536cec34/src/pipeline.jl#L37",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",v,[e("summary",null,[i[62]||(i[62]=e("a",{id:"TradingPipeline.@hsm-Tuple{Any}",href:"#TradingPipeline.@hsm-Tuple{Any}"},[e("span",{class:"jlbinding"},"TradingPipeline.@hsm")],-1)),i[63]||(i[63]=t()),a(s,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),i[65]||(i[65]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@hsm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> strategy_subject</span></span></code></pre></div><p>Given a StrategySubject instance, define the states and transitions for a MarketOrderStrategyStateMachine, and return the singleton instance of that state machine.</p>',2)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[64]||(i[64]=[e("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/5cbe750d31f5a154e1d6dee9b607a2a0536cec34/src/hsm_types.jl#L41-L46",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",F,[e("summary",null,[i[66]||(i[66]=e("a",{id:"TradingPipeline.@pnl-NTuple{4, Any}",href:"#TradingPipeline.@pnl-NTuple{4, Any}"},[e("span",{class:"jlbinding"},"TradingPipeline.@pnl")],-1)),i[67]||(i[67]=t()),a(s,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),i[69]||(i[69]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@pnl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> entry exit quantity leverage</span></span></code></pre></div><p>Calculate the profit/loss of a long positon. The <code>quantity</code> and <code>leverage</code> are optional.</p>',2)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[68]||(i[68]=[e("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/5cbe750d31f5a154e1d6dee9b607a2a0536cec34/src/pnl.jl#L105-L109",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",S,[e("summary",null,[i[70]||(i[70]=e("a",{id:"TradingPipeline.@pnls-NTuple{4, Any}",href:"#TradingPipeline.@pnls-NTuple{4, Any}"},[e("span",{class:"jlbinding"},"TradingPipeline.@pnls")],-1)),i[71]||(i[71]=t()),a(s,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),i[73]||(i[73]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@pnls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> entry exit quantity leverage</span></span></code></pre></div><p>Calculate the profit/loss of a short positon. The <code>quantity</code> and <code>leverage</code> are optional.</p>',2)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[72]||(i[72]=[e("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/5cbe750d31f5a154e1d6dee9b607a2a0536cec34/src/pnl.jl#L136-L140",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",x,[e("summary",null,[i[74]||(i[74]=e("a",{id:"TradingPipeline.Stops.set_subject!-Tuple{Rocket.AbstractSubject}",href:"#TradingPipeline.Stops.set_subject!-Tuple{Rocket.AbstractSubject}"},[e("span",{class:"jlbinding"},"TradingPipeline.Stops.set_subject!")],-1)),i[75]||(i[75]=t()),a(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[77]||(i[77]=e("p",null,"Mutate the subject of all TP.Stops state instances. This is my workaround for state machines being singletons.",-1)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[76]||(i[76]=[e("a",{href:"https://github.com/g-gundam/TradingPipeline.jl/blob/5cbe750d31f5a154e1d6dee9b607a2a0536cec34/src/stops.jl#L41-L44",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})])])}const O=r(h,[["render",D]]);export{R as __pageData,O as default};
